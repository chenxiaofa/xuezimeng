<?php

namespace app\models;

use app\components\XssFilter;
use Yii;
use yii\db\ActiveRecord;

/**
 * Class Articles
 * @property integer $id
 * @property string $title
 * @property string $content
 * @property integer $type
 * @property integer $status
 * @property integer $create_time
 * @property integer $update_time
 * @property integer $creator
 * @property integer $summarization
 * @property integer $image_url
 */
class Articles extends ArticlesBase
{
    const TYPE_WEB_MODULE = 1;
    const TYPE_TOPIC = 2;
    const TYPE_NEWS = 3;


    /**
     * @param $type
     * @return string
     */
    static function tranlateType($type)
    {
        $map = [
            1=>'站点模块',
            2=>'课程介绍',
            3=>'学子梦动态',
        ];
        if (array_key_exists($type,$map))
        {
            return $map[$type];
        }
        return '';
    }

    /**
     * @return string
     */
    public function getTypeText()
    {
        return self::tranlateType($this->type);
    }

    public function fields()
    {
        return [
            'id',
            'title',
            'create_time'=>function($m)
            {
                return date('Y-m-d H:i',$m->create_time);
            },
        ];
    }

    public function beforeSave($insert)
    {
        if ($insert)
        {
            $this->create_time = time();
            $this->status = 1;
        }
        else
        {
            $old = self::findOne(['id'=>$this->id]);
            ArticleDraft::addDraft($old->id,$old->title,$old->content);
        }

        $this->content = (new XssFilter())->do_filter($this->content);

        $this->update_time = time();

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function afterSave($insert, $changedAttributes)
    {
        if ($insert)
        {
            ArticleDraft::addDraft($this->id,$this->title,$this->content);
        }

        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    public static function getModuleTypeArticles()
    {
        return self::findAll(['type'=>self::TYPE_WEB_MODULE,'status'=>1]);
    }

    public static function getTopicTypeArticles()
    {
        return self::findAll(['type'=>self::TYPE_TOPIC,'status'=>1]);
    }

    public static function getNewsTypeArticles()
    {
        return self::find()->limit(10)->where(['type'=>self::TYPE_NEWS,'status'=>1])->orderBy('id desc')->all();
    }

}
